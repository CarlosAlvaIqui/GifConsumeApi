{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","SetCategorias","useState","inputValue","SetinputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifExpertApp","categorias","onClick","caracter","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACG,0BAAMC,SAVY,SAACC,GAClBA,EAAEC,iBAEFC,QAAQC,IAAI,gBACVN,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,OAKd,4BAAKD,GACL,2BAAOU,KAAK,OACRC,MAAOX,EACPY,SApBkB,SAACT,GACvBE,QAAQC,IAAIH,EAAEU,OAAOF,OAErBV,EAAcE,EAAEU,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACCC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAI7CZ,QAAQC,IAAIiB,GAbQ,kBAefA,GAfe,4CAAH,sDCEPO,EAAe,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACnC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SASrB,ECVwB,SAACA,GACrB,MAAyBhB,mBAAS,CAC9BuB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OAdAC,qBAAW,WACHxB,EAAQC,GACPwB,MAAM,SAACd,GACJe,YAAW,WACPH,EAAS,CACLf,KAAKG,EACLU,SAAQ,IAEZ9B,QAAQC,IAAImB,KACb,UAEb,CAACV,IAGIqB,EDVYK,CAAa1B,GAA7BO,EAAP,EAAOA,KAAKa,EAAZ,EAAYA,QACZ,OACG,oCACC,wBAAIJ,UAAU,qCAAqChB,GAE9CoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAGPT,EAAKE,KAAK,SAACC,GAAD,OAEV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACDD,UErBfkB,EAAgB,WAIzB,MAAmC5C,mBAAS,CAAC,SAA7C,mBAAO6C,EAAP,KAAkB9C,EAAlB,KAUA,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BAAQ+C,QAfM,WACdxC,QAAQC,IAAIsC,GACZ9C,EAAc,GAAD,mBAAK8C,GAAL,CAAgB,qBAC7BvC,QAAQC,IAAIsC,KAYZ,WACA,4BAEIA,EAAWpB,KAAK,SAACsB,GAAD,OACZ,kBAAC,EAAD,CAASJ,IAAKI,EAAU/B,SAAU+B,UCrBlDC,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.fe55d063.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({SetCategorias}) => {\r\n    \r\n    const [inputValue, SetinputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n\r\n        SetinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        console.log('submit hecho')\r\n       if(inputValue.trim().length > 2){\r\n        SetCategorias(cats => [inputValue, ...cats])\r\n        SetinputValue('')\r\n       }\r\n    }\r\n    return (\r\n       <form onSubmit={handleSubmit}>\r\n        <h2>{inputValue}</h2>\r\n        <input type=\"text\"\r\n            value={inputValue}\r\n            onChange={ handleInputChange}\r\n        />\r\n       </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    SetCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=p8ouXeGyOPFTK7cfLVfIbLepO7LSWdft`\r\n    const resp = await fetch(url)\r\n   const {data} = await resp.json()\r\n\r\n   const gifs = data.map (img => {\r\n       return {\r\n               id: img.id,\r\n               title:img.title,\r\n               url: img.images.downsized_medium.url\r\n       }\r\n   }) \r\n\r\n   console.log(gifs)\r\n //  setImages(gifs)\r\n return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItems = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>    \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItems } from './GifGridItems'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images,setImages] = useState([])\r\n\r\n    // useEffect( () => {\r\n    //     getGifs(category)\r\n    //     .then(imgs => setImages(imgs))\r\n    // },[category]) \r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n    return (\r\n       <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    {\r\n                    data.map( (img) => \r\n                        \r\n                    <GifGridItems \r\n                    key={img.id }     \r\n                        {...img}/>\r\n                    \r\n                    )\r\n                    }\r\n                    \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n        const [state,setState] = useState({\r\n            data:[],\r\n            loading:true\r\n        })\r\n        \r\n        useEffect( () => {\r\n                getGifs(category)\r\n                .then( (img) => {\r\n                    setTimeout(() => {\r\n                        setState({\r\n                            data:img,\r\n                            loading:false\r\n                        })\r\n                        console.log(img)\r\n                    }, 3000);\r\n                })\r\n        },[category])\r\n\r\n      \r\n        return state\r\n}","\r\nimport React,{useState} from 'react';\r\n\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp  = () => {\r\n\r\n\r\n\r\n    const [categorias,SetCategorias] = useState(['goku'])\r\n\r\n    const handleadd = () => {\r\n        console.log(categorias)\r\n        SetCategorias([...categorias,'juana la cubana'])\r\n        console.log(categorias)\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory SetCategorias={SetCategorias}/>\r\n        <hr/>\r\n\r\n\r\n        <button onClick={handleadd}>Agregar</button>\r\n        <ol>\r\n         {\r\n            categorias.map( (caracter) => (\r\n                <GifGrid key={caracter} category={caracter}/>\r\n\r\n            )   \r\n              )\r\n            }\r\n         </ol>\r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp'\n\n/**\nconst apiKey = 'p8ouXeGyOPFTK7cfLVfIbLepO7LSWdft'\n\nconst peticion = fetch(`http://api.giphy.com/v1/gifs/random?api_key=${apiKey}`);\n */\nReactDOM.render( <GifExpertApp />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}